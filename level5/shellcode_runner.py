from qiling import Qiling
from qiling.const import QL_VERBOSE, QL_ARCH, QL_OS
from unicorn.x86_const import *
from pprint import pprint

# fmt: off
shellcode = bytes([
    0x55, 0x48, 0x8B, 0xEC, 0xE8, 0xB9, 0x0D, 0x00, 0x00, 0xC9, 0xC3, 0x57, 0x55, 0x48, 0x8B, 0xEC, 
    0x8B, 0xF8, 0x6A, 0x03, 0x58, 0x0F, 0x05, 0xC9, 0x5F, 0xC3, 0x56, 0x57, 0x55, 0x48, 0x8B, 0xEC, 
    0x48, 0x8D, 0x64, 0x24, 0xF0, 0x44, 0x8B, 0xC8, 0x66, 0x44, 0x8B, 0xC2, 0x6A, 0x29, 0x58, 0x6A, 
    0x02, 0x5F, 0x6A, 0x01, 0x5E, 0x6A, 0x06, 0x5A, 0x0F, 0x05, 0x44, 0x8B, 0xD0, 0x41, 0x83, 0xFA, 
    0x00, 0x7C, 0x02, 0xEB, 0x07, 0x41, 0x8B, 0xC2, 0xC9, 0x5F, 0x5E, 0xC3, 0x48, 0x8D, 0x7D, 0xF0, 
    0x32, 0xC0, 0x6A, 0x10, 0x59, 0xF3, 0xAA, 0x66, 0xC7, 0x45, 0xF0, 0x02, 0x00, 0x66, 0x41, 0xC1, 
    0xC0, 0x08, 0x66, 0x44, 0x89, 0x45, 0xF2, 0x41, 0x0F, 0xC9, 0x44, 0x89, 0x4D, 0xF4, 0x48, 0x8D, 
    0x75, 0xF0, 0x6A, 0x2A, 0x58, 0x41, 0x8B, 0xFA, 0x6A, 0x10, 0x5A, 0x0F, 0x05, 0x83, 0xF8, 0x00, 
    0x7C, 0x02, 0xEB, 0x04, 0xC9, 0x5F, 0x5E, 0xC3, 0x41, 0x8B, 0xC2, 0xC9, 0x5F, 0x5E, 0xC3, 0x56, 
    0x57, 0x55, 0x48, 0x8B, 0xEC, 0x8B, 0xF8, 0x6A, 0x30, 0x58, 0x8B, 0xF2, 0x0F, 0x05, 0xC9, 0x5F, 
    0x5E, 0xC3, 0x53, 0x56, 0x57, 0x55, 0x48, 0x8B, 0xEC, 0x48, 0x8B, 0xD8, 0x33, 0xD2, 0x83, 0xFA, 
    0x10, 0x7C, 0x02, 0xEB, 0x25, 0x48, 0x8B, 0xC3, 0x48, 0x63, 0xCA, 0x4C, 0x8D, 0x04, 0x88, 0x48, 
    0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x63, 0xCA, 0x48, 0x8D, 0x04, 0x88, 
    0x8B, 0x00, 0x41, 0x89, 0x00, 0x83, 0xC2, 0x01, 0xEB, 0xD4, 0x33, 0xF6, 0x83, 0xFE, 0x0A, 0x7C, 
    0x05, 0xE9, 0x48, 0x09, 0x00, 0x00, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x00, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x00, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x10, 
    0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x30, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x30, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x00, 
    0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 0x5A, 0xE8, 0x3C, 0x0E, 0x00, 0x00, 0x89, 0x07, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x20, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x20, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x30, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x10, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x10, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x20, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 
    0x6A, 0x0C, 0x5A, 0xE8, 0xF2, 0x0D, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 
    0x48, 0x83, 0xC2, 0x00, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x00, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x10, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 
    0x48, 0x83, 0xC7, 0x30, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x30, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x00, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0xA8, 0x0D, 
    0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x20, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x20, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x30, 0x8B, 0x00, 
    0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x10, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x10, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x20, 0x8B, 0x00, 
    0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 0x5E, 0x0D, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x04, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x04, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x14, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x34, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x34, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x04, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 
    0x5A, 0xE8, 0x14, 0x0D, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 
    0xC2, 0x24, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x24, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x34, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 
    0xC7, 0x14, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x14, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x24, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x0C, 0x5A, 0xE8, 0xCA, 0x0C, 0x00, 0x00, 
    0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x04, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x04, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x14, 0x8B, 0x00, 0x03, 0xC8, 
    0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x34, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x34, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x04, 0x8B, 0x00, 0x33, 0xC8, 
    0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0x80, 0x0C, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x24, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x24, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x34, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x14, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x14, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x24, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 
    0x36, 0x0C, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x08, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x08, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x18, 
    0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x38, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x38, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x08, 
    0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 0x5A, 0xE8, 0xEC, 0x0B, 0x00, 0x00, 0x89, 0x07, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x28, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x28, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x38, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x18, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x18, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x28, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 
    0x6A, 0x0C, 0x5A, 0xE8, 0xA2, 0x0B, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 
    0x48, 0x83, 0xC2, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x08, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x18, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 
    0x48, 0x83, 0xC7, 0x38, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x38, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x08, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0x58, 0x0B, 
    0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x28, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x28, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x38, 0x8B, 0x00, 
    0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x18, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x18, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x28, 0x8B, 0x00, 
    0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 0x0E, 0x0B, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x0C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x0C, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x1C, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x3C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x3C, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x0C, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 
    0x5A, 0xE8, 0xC4, 0x0A, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 
    0xC2, 0x2C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x2C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x3C, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 
    0xC7, 0x1C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x1C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x2C, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x0C, 0x5A, 0xE8, 0x7A, 0x0A, 0x00, 0x00, 
    0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x0C, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x0C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x1C, 0x8B, 0x00, 0x03, 0xC8, 
    0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x3C, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x3C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x0C, 0x8B, 0x00, 0x33, 0xC8, 
    0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0x30, 0x0A, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x2C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x2C, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x3C, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x1C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x1C, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x2C, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 
    0xE6, 0x09, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x00, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x00, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x14, 
    0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x3C, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x3C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x00, 
    0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 0x5A, 0xE8, 0x9C, 0x09, 0x00, 0x00, 0x89, 0x07, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x28, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x28, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x3C, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x14, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x14, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x28, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 
    0x6A, 0x0C, 0x5A, 0xE8, 0x52, 0x09, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 
    0x48, 0x83, 0xC2, 0x00, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x00, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x14, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 
    0x48, 0x83, 0xC7, 0x3C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x3C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x00, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0x08, 0x09, 
    0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x28, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x28, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x3C, 0x8B, 0x00, 
    0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x14, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x14, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x28, 0x8B, 0x00, 
    0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 0xBE, 0x08, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x04, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x04, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x18, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x30, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x30, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x04, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 
    0x5A, 0xE8, 0x74, 0x08, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 
    0xC2, 0x2C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x2C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x30, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 
    0xC7, 0x18, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x18, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x2C, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x0C, 0x5A, 0xE8, 0x2A, 0x08, 0x00, 0x00, 
    0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x04, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x04, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x18, 0x8B, 0x00, 0x03, 0xC8, 
    0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x30, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x30, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x04, 0x8B, 0x00, 0x33, 0xC8, 
    0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0xE0, 0x07, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x2C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x2C, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x30, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x18, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x18, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x2C, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 
    0x96, 0x07, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x08, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x08, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x1C, 
    0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x34, 
    0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x34, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x08, 
    0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 0x5A, 0xE8, 0x4C, 0x07, 0x00, 0x00, 0x89, 0x07, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x20, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x20, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x34, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 
    0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x1C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 
    0x1C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x20, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 
    0x6A, 0x0C, 0x5A, 0xE8, 0x02, 0x07, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 
    0x48, 0x83, 0xC2, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x08, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x1C, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 
    0x48, 0x83, 0xC7, 0x34, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x34, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 
    0x48, 0x83, 0xC0, 0x08, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0xB8, 0x06, 
    0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x20, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x20, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x34, 0x8B, 0x00, 
    0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x1C, 0x48, 0x8B, 
    0xC3, 0x48, 0x83, 0xC0, 0x1C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x20, 0x8B, 0x00, 
    0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 0x6E, 0x06, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x0C, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x0C, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x10, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 
    0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x38, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x38, 0x8B, 
    0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x0C, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x10, 
    0x5A, 0xE8, 0x24, 0x06, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 
    0xC2, 0x24, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x24, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x38, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 
    0xC7, 0x10, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x10, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 
    0xC0, 0x24, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x0C, 0x5A, 0xE8, 0xDA, 0x05, 0x00, 0x00, 
    0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x0C, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x0C, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x10, 0x8B, 0x00, 0x03, 0xC8, 
    0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x38, 0x48, 0x8B, 0xC3, 0x48, 
    0x83, 0xC0, 0x38, 0x8B, 0x08, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x0C, 0x8B, 0x00, 0x33, 0xC8, 
    0x8B, 0xC1, 0x6A, 0x08, 0x5A, 0xE8, 0x90, 0x05, 0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xD0, 0x48, 0x83, 0xC2, 0x24, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x24, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x38, 0x8B, 0x00, 0x03, 0xC8, 0x89, 0x0A, 0x48, 0x8B, 0xC3, 0x48, 
    0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x10, 0x48, 0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x10, 0x8B, 0x08, 0x48, 
    0x8B, 0xC3, 0x48, 0x83, 0xC0, 0x24, 0x8B, 0x00, 0x33, 0xC8, 0x8B, 0xC1, 0x6A, 0x07, 0x5A, 0xE8, 
    0x46, 0x05, 0x00, 0x00, 0x89, 0x07, 0x83, 0xC6, 0x01, 0xE9, 0xAE, 0xF6, 0xFF, 0xFF, 0x33, 0xD2, 
    0x83, 0xFA, 0x10, 0x7C, 0x02, 0xEB, 0x35, 0x48, 0x8B, 0xC3, 0x48, 0x63, 0xCA, 0x4C, 0x8D, 0x04, 
    0x88, 0x48, 0x8B, 0xC3, 0x48, 0x63, 0xCA, 0x48, 0x8D, 0x04, 0x88, 0x44, 0x8B, 0x08, 0x48, 0x8B, 
    0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x63, 0xCA, 0x48, 0x8D, 0x04, 0x88, 0x8B, 
    0x00, 0x44, 0x03, 0xC8, 0x45, 0x89, 0x08, 0x83, 0xC2, 0x01, 0xEB, 0xC4, 0x48, 0x8D, 0x83, 0x80, 
    0x00, 0x00, 0x00, 0x48, 0x83, 0xC0, 0x30, 0x48, 0x8B, 0xC8, 0x8B, 0x01, 0x8B, 0x01, 0x83, 0xF8, 
    0x00, 0x74, 0x02, 0xEB, 0x09, 0x48, 0x8B, 0xC1, 0x48, 0x83, 0xC0, 0x04, 0x8B, 0x00, 0xC9, 0x5F, 
    0x5E, 0x5B, 0xC3, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x55, 0x48, 0x8B, 0xEC, 0x48, 0x8B, 
    0xD8, 0x4C, 0x8B, 0xE2, 0x4C, 0x8B, 0xE9, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x40, 0x48, 0x49, 0x8B, 
    0xF4, 0x48, 0x8B, 0xF8, 0x6A, 0x20, 0x59, 0xF3, 0xA4, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x40, 0x68, 
    0x49, 0x8B, 0xF5, 0x48, 0x8B, 0xF8, 0x6A, 0x0C, 0x59, 0xF3, 0xA4, 0x48, 0x8D, 0x05, 0xB3, 0x04, 
    0x00, 0x00, 0x48, 0x8D, 0x30, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 
    0x8B, 0xF8, 0x48, 0x83, 0xC7, 0x00, 0x48, 0x8B, 0xC6, 0x48, 0x83, 0xC0, 0x00, 0xE8, 0x2E, 0x04, 
    0x00, 0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 
    0xF8, 0x48, 0x83, 0xC7, 0x04, 0x48, 0x8B, 0xC6, 0x48, 0x83, 0xC0, 0x04, 0xE8, 0x0F, 0x04, 0x00, 
    0x00, 0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF8, 
    0x48, 0x83, 0xC7, 0x08, 0x48, 0x8B, 0xC6, 0x48, 0x83, 0xC0, 0x08, 0xE8, 0xF0, 0x03, 0x00, 0x00, 
    0x89, 0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF8, 0x48, 
    0x83, 0xC7, 0x0C, 0x48, 0x83, 0xC6, 0x0C, 0x48, 0x8B, 0xC6, 0xE8, 0xD1, 0x03, 0x00, 0x00, 0x89, 
    0x07, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 
    0xC6, 0x10, 0x49, 0x8B, 0xC4, 0x48, 0x83, 0xC0, 0x00, 0xE8, 0xB2, 0x03, 0x00, 0x00, 0x89, 0x06, 
    0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 
    0x14, 0x49, 0x8B, 0xC4, 0x48, 0x83, 0xC0, 0x04, 0xE8, 0x93, 0x03, 0x00, 0x00, 0x89, 0x06, 0x48, 
    0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x18, 
    0x49, 0x8B, 0xC4, 0x48, 0x83, 0xC0, 0x08, 0xE8, 0x74, 0x03, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 
    0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x1C, 0x49, 
    0x8B, 0xC4, 0x48, 0x83, 0xC0, 0x0C, 0xE8, 0x55, 0x03, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 0xC3, 
    0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x20, 0x49, 0x8B, 
    0xC4, 0x48, 0x83, 0xC0, 0x10, 0xE8, 0x36, 0x03, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 0xC3, 0x48, 
    0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x24, 0x49, 0x8B, 0xC4, 
    0x48, 0x83, 0xC0, 0x14, 0xE8, 0x17, 0x03, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 
    0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x28, 0x49, 0x8B, 0xC4, 0x48, 
    0x83, 0xC0, 0x18, 0xE8, 0xF8, 0x02, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 
    0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x2C, 0x49, 0x83, 0xC4, 0x1C, 0x49, 
    0x8B, 0xC4, 0xE8, 0xD9, 0x02, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 
    0x00, 0x00, 0x00, 0x48, 0x83, 0xC0, 0x30, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xC3, 
    0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x34, 0x49, 0x8B, 
    0xC5, 0x48, 0x83, 0xC0, 0x00, 0xE8, 0xA6, 0x02, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 0xC3, 0x48, 
    0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x38, 0x49, 0x8B, 0xC5, 
    0x48, 0x83, 0xC0, 0x04, 0xE8, 0x87, 0x02, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 
    0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF0, 0x48, 0x83, 0xC6, 0x3C, 0x49, 0x8B, 0xC5, 0x48, 
    0x83, 0xC0, 0x08, 0xE8, 0x68, 0x02, 0x00, 0x00, 0x89, 0x06, 0x48, 0x8D, 0x43, 0x68, 0x49, 0x8B, 
    0xF5, 0x48, 0x8B, 0xF8, 0x6A, 0x0C, 0x59, 0xF3, 0xA4, 0xC9, 0x41, 0x5D, 0x41, 0x5C, 0x5F, 0x5E, 
    0x5B, 0xC3, 0x53, 0x56, 0x57, 0x41, 0x54, 0x55, 0x48, 0x8B, 0xEC, 0x48, 0x8B, 0xD8, 0x4C, 0x8B, 
    0xC9, 0x49, 0x8B, 0xF0, 0x32, 0xC0, 0x48, 0x8B, 0xFB, 0xB9, 0xC0, 0x00, 0x00, 0x00, 0xF3, 0xAA, 
    0x48, 0x8B, 0xC3, 0x49, 0x8B, 0xC9, 0xE8, 0x98, 0xFD, 0xFF, 0xFF, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 
    0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xC8, 0x48, 0x83, 0xC1, 0x30, 0x8B, 0xC6, 0x89, 0x01, 
    0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x80, 0x80, 0x00, 0x00, 0x00, 0x48, 0x8B, 0xF8, 0x48, 0x83, 0xC7, 
    0x34, 0x48, 0x8B, 0xC3, 0x48, 0x8D, 0x40, 0x68, 0xE8, 0xF3, 0x01, 0x00, 0x00, 0x4C, 0x8B, 0xE6, 
    0x49, 0xC1, 0xEC, 0x20, 0x41, 0x03, 0xC4, 0x89, 0x07, 0x48, 0x89, 0x73, 0x78, 0x6A, 0x40, 0x8F, 
    0x43, 0x40, 0xC9, 0x41, 0x5C, 0x5F, 0x5E, 0x5B, 0xC3, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 
    0x55, 0x48, 0x8B, 0xEC, 0x48, 0x8B, 0xF0, 0x48, 0x8B, 0xFA, 0x4C, 0x8B, 0xE1, 0x48, 0x8B, 0xDE, 
    0x48, 0x8D, 0x03, 0x4C, 0x8B, 0xE8, 0x33, 0xDB, 0x49, 0x3B, 0xDC, 0x72, 0x02, 0xEB, 0x0C, 0x48, 
    0x8B, 0x46, 0x40, 0x48, 0x83, 0xF8, 0x40, 0x72, 0x18, 0xEB, 0x09, 0xC9, 0x41, 0x5D, 0x41, 0x5C, 
    0x5F, 0x5E, 0x5B, 0xC3, 0x48, 0x8B, 0xC6, 0xE8, 0x16, 0xF3, 0xFF, 0xFF, 0x6A, 0x00, 0x8F, 0x46, 
    0x40, 0x4C, 0x8B, 0xC7, 0x4C, 0x03, 0xC3, 0x48, 0x8B, 0xC7, 0x48, 0x03, 0xC3, 0x8A, 0x10, 0x48, 
    0x8B, 0x4E, 0x40, 0x49, 0x8B, 0xC5, 0x48, 0x03, 0xC1, 0x8A, 0x00, 0x32, 0xD0, 0x41, 0x88, 0x10, 
    0x48, 0x8B, 0x46, 0x40, 0x48, 0x83, 0xC0, 0x01, 0x48, 0x89, 0x46, 0x40, 0x48, 0x83, 0xC3, 0x01, 
    0xEB, 0xA6, 0x53, 0x56, 0x57, 0x41, 0x54, 0x55, 0x48, 0x8B, 0xEC, 
    
    # 0x48, 0x8D, 0xA4, 0x24, 0x78, 
    # 0xE9, 0xFF, 0xFF, 

    0x90, 0x90, 0x90, 0x90, 0x90,
    0x90, 0x90, 0x90,
    
    # 0xB8, 0x0F, 0x02, 0x00, 0x0A, 0x66, 0xBA, 0x39, 0x05, 0xE8, 0x39, 0xF2, 0xFF, 
    # 0xFF, 0x8B, 0xD8, 0x48, 0x8D, 0xB5, 0x88, 0xED, 0xFF, 0xFF, 0x6A, 0x2D, 0x58, 0x8B, 0xFB, 0x6A, 
    # 0x20, 0x5A, 0x45, 0x33, 0xD2, 0x45, 0x33, 0xC0, 0x45, 0x33, 0xC9, 0x0F, 0x05, 0x48, 0x8D, 0xB5, 
    # 0xA8, 0xED, 0xFF, 0xFF, 0x6A, 0x2D, 0x58, 0x8B, 0xFB, 0x6A, 0x0C, 0x5A, 0x45, 0x33, 0xD2, 0x45, 
    # 0x33, 0xC0, 0x45, 0x33, 0xC9, 0x0F, 0x05, 0x48, 0x8D, 0xB5, 0x38, 0xFF, 0xFF, 0xFF, 0x6A, 0x2D, 
    # 0x58, 0x8B, 0xFB, 0x6A, 0x04, 0x5A, 0x45, 0x33, 0xD2, 0x45, 0x33, 0xC0, 0x45, 0x33, 0xC9, 0x0F, 
    # 0x05, 0x48, 0x8D, 0xB5, 0xB8, 0xED, 0xFF, 0xFF, 0x6A, 0x2D, 0x58, 0x8B, 0xFB, 0x8B, 0x95, 0x38, 
    # 0xFF, 0xFF, 0xFF, 0x45, 0x33, 0xD2, 0x45, 0x33, 0xC0, 0x45, 0x33, 0xC9, 0x0F, 0x05, 0x48, 0x63, 
    # 0xC0, 0xC6, 0x84, 0x05, 0xB8, 0xED, 0xFF, 0xFF, 0x00, 0x48, 0x8D, 0xBD, 0xB8, 0xED, 0xFF, 0xFF, 
    # 0x6A, 0x02, 0x58, 0x33, 0xF6, 0x33, 0xD2, 0x0F, 0x05, 0x44, 0x8B, 0xE0, 0x48, 0x8D, 0xB5, 0xB8, 
    # 0xEE, 0xFF, 0xFF, 0x33, 0xC0, 0x41, 0x8B, 0xFC, 0xBA, 0x80, 0x00, 0x00, 0x00, 0x0F, 0x05, 0x48, 
    # 0x8D, 0xBD, 0xB8, 0xEE, 0xFF, 0xFF, 0x32, 0xC0, 0x33, 0xC9, 0x48, 0xFF, 0xC9, 0xF2, 0xAE, 0xF7, 
    # 0xD1, 0xFF, 0xC9, 0x89, 0x8D, 0x3C, 0xFF, 0xFF, 0xFF, 

	0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    
    # 0x48, 0x8D, 0x85, 0x40, 0xFF, 0xFF, 0xFF, 
    # 0x48, 0x8D, 0x95, 0x88, 0xED, 0xFF, 0xFF, 0x48, 0x8D, 0x8D, 0xA8, 0xED, 0xFF, 0xFF, 0x45, 0x33, 
    # 0xC0, 

    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 
    
    # Call chacha20_init function
    # RAX => context
    # RDX => key
    # RCX => nonce
    0xE8, 0x1C, 0xFE, 0xFF, 0xFF, 
    
    # 0x48, 0x8D, 0x85, 0x40, 0xFF, 0xFF, 0xFF, 0x48, 0x8D, 0x95, 
    # 0xB8, 0xEE, 0xFF, 0xFF, 0x8B, 0x8D, 0x3C, 0xFF, 0xFF, 0xFF, 
    
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    
    # Call chacha20_xor function
    # RAX => context
    # RDX => buffer
    # ECX => buf_len (4 byte, dword)
    0xE8, 0x7A, 0xFE, 0xFF, 0xFF, 
    
    # 0x48, 0x8D, 0xB5, 0x3C, 0xFF, 0xFF, 0xFF, 0x6A, 0x2C, 0x58, 0x8B, 0xFB, 0x6A, 0x04, 0x5A, 0x45, 
    # 0x33, 0xD2, 0x45, 0x33, 0xC0, 0x45, 0x33, 0xC9, 0x0F, 0x05, 

    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    
    # 0x48, 0x8D, 0xB5, 0xB8, 0xEE, 0xFF, 0xFF, 

    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 

    # 0x6A, 0x2C, 0x58, 0x8B, 0xFB, 0x8B, 0x95, 0x3C, 0xFF, 0xFF, 0xFF, 0x45, 0x33, 0xD2, 0x45, 0x33, 
    # 0xC0, 0x45, 0x33, 0xC9, 0x0F, 0x05, 0x41, 0x8B, 0xC4, 0xE8, 0xFD, 0xF0, 0xFF, 0xFF, 0x8B, 0xC3, 
    # 0x33, 0xD2, 0xE8, 0x78, 0xF1, 0xFF, 0xFF, 

    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    
    0x33, 0xC0, 0xC9, 0x41, 0x5C, 0x5F, 0x5E, 0x5B, 0xC3, 
    0x55, 0x48, 0x8B, 0xEC, 0x48, 0x8B, 0xC8, 0x45, 0x33, 0xC0, 0x8A, 0x01, 0x0F, 0xB6, 0xC0, 0xC1, 
    0xE0, 0x00, 0x44, 0x0B, 0xC0, 0x41, 0x8B, 0xC0, 0x48, 0x8B, 0xD1, 0x48, 0x83, 0xC2, 0x01, 0x8A, 
    0x12, 0x0F, 0xB6, 0xD2, 0xC1, 0xE2, 0x08, 0x0B, 0xC2, 0x48, 0x8B, 0xD1, 0x48, 0x83, 0xC2, 0x02, 
    0x8A, 0x12, 0x0F, 0xB6, 0xD2, 0xC1, 0xE2, 0x10, 0x0B, 0xC2, 0x48, 0x83, 0xC1, 0x03, 0x8A, 0x09, 
    0x0F, 0xB6, 0xC9, 0xC1, 0xE1, 0x18, 0x0B, 0xC1, 0xC9, 0xC3, 0x55, 0x48, 0x8B, 0xEC, 0x8B, 0xCA, 
    0x44, 0x8B, 0xC0, 0x41, 0xD3, 0xE0, 0x6A, 0x20, 0x59, 0x2B, 0xCA, 0xD3, 0xE8, 0x44, 0x0B, 0xC0, 
    0x41, 0x8B, 0xC0, 0xC9, 0xC3, 0x65, 0x78, 0x70, 0x61, 0x6E, 0x64, 0x20, 0x33, 0x32, 0x2D, 0x62, 
    0x79, 0x74, 0x65, 0x20, 0x4B, 0x00, 
])
# fmt: on

# instantiate a Qiling object to emulate the shellcode. when emulating a binary Qiling would be able to automatically
# infer the target architecture and operating system. this, however, is not possible when emulating a shellcode, therefore
# both 'archtype' and 'ostype' arguments must be provided
ql = Qiling(
    code=shellcode,
    rootfs=r"sshcontainer",
    archtype=QL_ARCH.X8664,
    ostype=QL_OS.LINUX,
    verbose=QL_VERBOSE.DEFAULT,
)

pprint(ql.mem.get_formatted_mapinfo())

base_addr = ql.mem.get_mapinfo()[1][0] + 0x1FF000  # hardcoded value from runtime
chacha20_xor_addr = base_addr + shellcode.find(bytes([0xE8, 0x7A, 0xFE, 0xFF, 0xFF]))
end_addr = base_addr + shellcode.find(
    bytes([0x33, 0xC0, 0xC9, 0x41, 0x5C, 0x5F, 0x5E, 0x5B, 0xC3])
)

chacha_ctx_addr = ql.mem.map_anywhere(
    0x10000, perms=3
)  # Arbitrary address for the stack base

key_addr = chacha_ctx_addr + 0x1000
# ql.mem.write(key_addr, b"12345678912345678912345678912345")  # test
ql.mem.write(key_addr, bytes([
    0x8D, 0xEC, 0x91, 0x12, 0xEB, 0x76, 0x0E, 0xDA, 0x7C, 0x7D, 0x87, 0xA4, 0x43, 0x27, 0x1C, 0x35, 
    0xD9, 0xE0, 0xCB, 0x87, 0x89, 0x93, 0xB4, 0xD9, 0x04, 0xAE, 0xF9, 0x34, 0xFA, 0x21, 0x66, 0xD7, 
]))

nonce_addr = chacha_ctx_addr + 0x2000
# ql.mem.write(nonce_addr, b"AAAAAAAAAAAA")  # test
ql.mem.write(nonce_addr, data = bytes([
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
]))

ql.arch.regs.rax = chacha_ctx_addr
ql.arch.regs.rdx = key_addr
ql.arch.regs.rcx = nonce_addr

# do the magic!
ql.emu_start(
    begin=base_addr, end=chacha20_xor_addr
)  # call up to chacha20_init function
chachactx_res = ql.mem.read(chacha_ctx_addr, size=0xC0)
pprint(chachactx_res)
pprint(" ".join(f"{byte:02x}" for byte in chachactx_res))

# flag = b"1234567890123456789\n" # test
flag = bytes([
    0xA9, 0xF6, 0x34, 0x08, 0x42, 0x2A, 0x9E, 0x1C, 0x0C, 0x03, 0xA8, 0x08, 0x94, 0x70, 0xBB, 0x8D, 
    0xAA, 0xDC, 0x6D, 0x7B, 0x24, 0xFF, 0x7F, 0x24, 0x7C, 0xDA, 0x83, 0x9E, 0x92, 0xF7, 0x07, 0x1D, 
    0x02, 0x63, 0x90, 0x2E, 0xC1, 0x58, 
])

# fmt: off
# fmt: on

buff_addr = chacha_ctx_addr + 0x3000
ql.mem.write(buff_addr, flag)

ql.arch.regs.rax = chacha_ctx_addr
ql.arch.regs.rdx = buff_addr
ql.arch.regs.ecx = len(flag)
ql.arch.regs.r8d = 0

ql.emu_start(
    begin=chacha20_xor_addr, end=end_addr
)  # call starting with chacha20_xor function
print("------ chacha context ---------")
chachactx_res = ql.mem.read(chacha_ctx_addr, size=0xC0)
pprint(chachactx_res)
pprint(" ".join(f"{byte:02x}" for byte in chachactx_res))

print("------ chacha buffer ---------")
chachabuff_res = ql.mem.read(buff_addr, size=len(flag))
pprint(chachabuff_res)
pprint(" ".join(f"{byte:02x}" for byte in chachabuff_res))

